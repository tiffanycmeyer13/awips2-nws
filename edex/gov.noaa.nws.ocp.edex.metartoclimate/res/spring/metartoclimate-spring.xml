<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="climateBloatMonitor"
        class="com.raytheon.uf.edex.database.health.DatabaseBloatMonitor">
        <constructor-arg>
            <bean
                class="com.raytheon.uf.edex.database.health.PostgresBloatDao">
                <constructor-arg value="climate" />
            </bean>
        </constructor-arg>
    </bean>
    
    <bean factory-bean="dbMonitorRegistry" factory-method="registerMonitor">
        <constructor-arg value="climateBloatMonitor" />
        <constructor-arg ref="climateBloatMonitor" />
    </bean>

    <bean id="metarToClimatePurger"
        class="gov.noaa.nws.ocp.edex.metartoclimate.ClimateMetarPurger">
        <constructor-arg ref="climateMetarReportDAO" />
        <property name="purgeHours" value="48" />
    </bean>

    <camelContext id="metarToClimateSvr-camel"
        xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">

        <endpoint id="metarClimatePurgeCron"
            uri="quartz://metartoclimate/climatepurge/?cron=${metartoclimatepurge.cron}" />

        <!-- purge climate DB rpt table -->
        <route id="metarClimatePurgeWork">
            <from uri="metarClimatePurgeCron" />
            <doTry>
                <bean ref="metarToClimatePurger" method="purgeClimateReport" />
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:metartoclimate?level=ERROR" />
                </doCatch>
            </doTry>
        </route>
    </camelContext>
    
    <bean factory-bean="contextManager" factory-method="registerClusteredContext">
        <constructor-arg ref="metarToClimateSvr-camel" />
    </bean>
</beans>