<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring
    http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- TOWRdocs Header
        The Spring XML file that defines EDEX ingest route and various beans that
        go with the DBGeo/GeoData EDEX plug-in
    -->
    <!-- TOWRdocs Description
        This file contains the definitions of Spring beans that map to Java classes,
        fields, etc. as they pertain the EDEX ingest of DBGeo/GeoData files.

        This file specifically:

            - Defines the thread pattern for DBGeo ingest.
            - Sets the PathManager that handles the loading of DBGeo ProductDescription file(s).
            - Defines the DBGeo decoder to be used in the ingest route.
            - Registers the DBGeo plugin with the Distribution Service.
            - Defines the Camel Context
            - Sets up the ingest route through EDEX (starting at the <route> element)

            Note: The ingest route is a list of methods that are executed serially during the ingest
                process. For instance, in the route defined below, a matching file is

                    - read into a byte array
                    - stripped of the WMO header (if it exists) and returned as a File instance
                    - run through the GeoDataDecoder
    -->
    <!-- TOWRdocs Status
        This file is new to the baseline with the delivery of the DBGeo (DCS 19064) plugin. It is
        expected to be included in AWIPS II 16.4.1 baseline.
    -->
    <!-- TOWRdocs POC
        Matt Comerford
    -->

    <bean id="geodataPathManager"
        class="com.raytheon.uf.common.localization.PathManagerFactory"
        factory-method="getPathManager" />

    <bean id="geoDataDecoder"
        class="gov.noaa.nws.obs.edex.plugin.geodata.decoder.GeoDataDecoder">
        <property name="pathManager" ref="geodataPathManager" />
    </bean>

    <bean id="geoDataDistRegistry" factory-bean="distributionSrv"
        factory-method="register">
        <constructor-arg ref="geodataPluginName" />
        <constructor-arg value="jms-durable:queue:Ingest.GeoData" />
    </bean>

    <camelContext id="geodata-camel"
        xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">

        <endpoint id="geodataJmsEndpoint" uri="jms-durable:queue:Ingest.GeoData" />
        <endpoint id="geodataDirectEndpoint" uri="direct-vm:geodata-decode" />

        <route id="geodataIngestRoute">
            <from uri="geodataJmsEndpoint"/>
            <doTry>
                <to uri="geodataDirectEndpoint" />
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:geodata?level=ERROR" />
                </doCatch>
            </doTry>
        </route>

        <route id="geodataIngestDecode">
          <from uri="geodataDirectEndpoint" />
            <setHeader name="pluginName">
                <constant>geodata</constant>
            </setHeader>
            <pipeline>
                <bean ref="stringToFile" />
                <bean ref="getFileWithoutWmoHeader" />
                <bean ref="geoDataDecoder" method="decode" />
                <to uri="direct-vm:persistIndexAlert" />
            </pipeline>
        </route>

    </camelContext>

</beans>
